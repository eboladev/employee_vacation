/// $Header
/// ============================================================================
///		Author		: M. Ivanchenko
///		Date create	: 06-11-2013
///		Date update	: 06-11-2013
///		Comment		:
/// ============================================================================
#ifndef __THREAD_OBJECT_H__
#define __THREAD_OBJECT_H__

#include <QThread>

namespace espira
{

/// ############################################################################
///			class thread_object
/// ############################################################################
    class thread_object : public QThread
	{
	Q_OBJECT

    /// ========================================================================
    ///		CONSTRUCTORS/DESTRUCTOR
    /// ========================================================================
    private:
        /// --------------------------------------------------------------------
        thread_object( const thread_object &rhs );

	public:
        /// --------------------------------------------------------------------
        thread_object( );
        /// --------------------------------------------------------------------
        virtual ~thread_object( );

    /// ========================================================================
    ///		FUNCTIONS
    /// ========================================================================

    /// ========================================================================
    ///		PROPERTIES
    /// ========================================================================
	public:
        /// --------------------------------------------------------------------
        const QString& title( ) const
        { return this->_x_title; }

        void title( const QString& x_title )
        {
            this->_x_title = x_title;
            this->setObjectName( x_title );
        }

    /// ========================================================================
    ///		OPERATORS
    /// ========================================================================
    private:
        /// --------------------------------------------------------------------
        thread_object& operator=( const thread_object &rhs );

    /// ========================================================================
    ///		SLOTS
    /// ========================================================================
    private slots:
        void thread_started( );
        void thread_finished( );
        void thread_terminated( );

    /// ========================================================================
    ///			FIELDS
    /// ========================================================================
    private:
        QString _x_title;

	};//class thread_object
/// ############################################################################
/// ----------------------------------------------------------------------------

}//namespace espira

#endif // __THREAD_OBJECT_H__
