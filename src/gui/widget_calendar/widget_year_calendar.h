/// $Header
/// ============================================================================
///		Author		: M. Ivanchenko
///		Date create	: 17-04-2013
///		Date update	: 07-12-2014
///		Comment		:
/// ============================================================================
#ifndef __WIDGET_YEAR_CALENDAR_H__
#define __WIDGET_YEAR_CALENDAR_H__

#include <QWidget>
#include <QSpinBox>
#include <QVector>

#include "calendar_data.h"

namespace rele_auto
{

namespace employee_vacation
{

class data_model_month;
class tableview_month_calendar;
typedef QVector<tableview_month_calendar*> vector_calendars;

/// ############################################################################
///			class widget_year_calendar
/// ############################################################################
    class widget_year_calendar : public QWidget
    {
    Q_OBJECT
    /// ========================================================================
    ///		CONSTRUCTORS/DESTRUCTOR
    /// ========================================================================
    private:
        /// --------------------------------------------------------------------
        widget_year_calendar( const widget_year_calendar &rhs );

    public:
        /// --------------------------------------------------------------------
        explicit widget_year_calendar( QWidget *parent = 0 );
        /// --------------------------------------------------------------------
        virtual ~widget_year_calendar( );

    /// ========================================================================
    ///		PROPERTIES
    /// ========================================================================
    public:
        /// --------------------------------------------------------------------
        /// calendar
        tableview_month_calendar*
            calendar( calendar_data::month_type month )
        {
            int n_month = month;
            if( this->_calendars.size( ) <= n_month )
            {
                return 0;
            }
            return this->_calendars[n_month - 1];
        }

        /// --------------------------------------------------------------------
        /// year
        int year( ) const
        {
            return this->_yearbox->value( );
        }

    /// ========================================================================
    ///		FUNCTIONS
    /// ========================================================================
    private:
        /// --------------------------------------------------------------------
        void initialize( );
        /// --------------------------------------------------------------------
        void init_layout( );
        /// --------------------------------------------------------------------
        void init_connections( );
        /// --------------------------------------------------------------------
        QWidget* init_spinbox( );
        /// --------------------------------------------------------------------
        tableview_month_calendar*
            init_month_calendar( int year, calendar_data::month_type month );

    public:
        /// ------------------------------------------------------------------------
        void set_vacation( const QDate &dt_begin, const QDate &dt_end );
        /// ------------------------------------------------------------------------
        void unset_vacation( const QDate &dt_begin, const QDate &dt_end );

    /// ========================================================================
    ///		PROPERTIES
    /// ========================================================================

    /// ========================================================================
    ///		OPERATORS
    /// ========================================================================
    private:
        /// --------------------------------------------------------------------
        widget_year_calendar& operator=( const widget_year_calendar &rhs );

    /// ========================================================================
    ///		SIGNALS
    /// ========================================================================
    signals:
        /// --------------------------------------------------------------------
        void calendar_changed( int );

    /// ========================================================================
    ///		SLOTS
    /// ========================================================================
    public slots:
        /// --------------------------------------------------------------------
        void year_changed( );

    /// ========================================================================
    ///		EVENTS
    /// ========================================================================
    protected:

    /// ========================================================================
    ///		FIELDS
    /// ========================================================================
    private:
        vector_calendars    _calendars;
        QSpinBox            *_yearbox;

    };

/// ############################################################################
/// ----------------------------------------------------------------------------

}//namespace employee_vacation

}//namespace rele_auto
#endif // __WIDGET_YEAR_CALENDAR_H__
