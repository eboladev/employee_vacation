/// ============================================================================
///		Author		: M. Ivanchenko
///		Date create	: 10-10-2013
///		Date update	: 10-12-2014
///		Comment		:
/// ============================================================================
#ifndef __APPLICATION_H__
#define __APPLICATION_H__

#include <QApplication>
#include <QTranslator>

#include <application_params.h>
#include <business_logic.h>

#include "thread_object.h"

namespace rele_auto
{

namespace employee_vacation
{

	class business_logic;
/// ############################################################################
///			class application
/// ############################################################################
	class application : public QApplication
	{
	Q_OBJECT
	/// ========================================================================
	///		CONSTRUCTORS/DESTRUCTOR
	/// ========================================================================
	private:
	/// ------------------------------------------------------------------------
		application( const application &rhs );

	public:
	/// ------------------------------------------------------------------------
		explicit application( int & argc, char ** argv );
	/// ------------------------------------------------------------------------
		~application( );

	/// ========================================================================
	///		PROPERTIES
	/// ========================================================================

	/// ========================================================================
	///		FUNCTIONS
	/// ========================================================================
	private:
	/// ------------------------------------------------------------------------
		void initialize( );
	/// ------------------------------------------------------------------------
		void load_translation( );
    /// ------------------------------------------------------------------------
        void load_config( );
    /// ------------------------------------------------------------------------
        void find_db_file( );
    /// ------------------------------------------------------------------------
        bool check_db_file();
    /// ------------------------------------------------------------------------
        void init_db( );
    /// ------------------------------------------------------------------------
        void init_logic( );
    /// ------------------------------------------------------------------------
        void set_font( );

	public:
	/// ------------------------------------------------------------------------
		static business_logic& the_business_logic( );
    /// ------------------------------------------------------------------------
        static application* program_instance( )
        {
            return static_cast<application*>( QApplication::instance( ) );
        }

	/// ========================================================================
	///		SLOTS
	/// ========================================================================
	private slots:
        void save_config( );

	/// ========================================================================
	///		OPERATORS
	/// ========================================================================
	private:
	/// ------------------------------------------------------------------------
		application& operator=( const application &rhs );

	/// ========================================================================
	///			FIELDS
    /// ========================================================================
    private:
		QTranslator _translator;
		static bool _is_logic_initialized;

        espira::utils::application_params   _params;

        espira::thread_object               _logic_thread;

	};//class application

//#############################################################################
//-----------------------------------------------------------------------------

}//namespace employee_vacation

}//namespace rele_auto

#endif // __APPLICATION_H__
